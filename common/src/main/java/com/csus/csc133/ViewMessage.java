/*
North region (Upper)
- Label with a black solid line border
- Shows the latest normal game message (outputs other than the 1 generated by 'm' command such as "Player start moving")
- Must replace the old message with the new message in every update
 */

package com.csus.csc133;

import java.util.*;

import com.codename1.ui.Component;
import com.codename1.ui.Container;
import com.codename1.ui.Display;
import com.codename1.ui.Label;
import com.codename1.ui.layouts.BoxLayout;
import com.codename1.ui.layouts.FlowLayout;

public class ViewMessage extends Container implements Observer {

    private Label msgHeader;
    private Label msg;
    private GameModel g;

    // Constructor
    public ViewMessage() {

        this.setLayout(new FlowLayout(Component.LEFT));
        msg = new Label("Game started ");
        add(msg);
        this.revalidate();
    }

    // update the message and then revalidate to make it fit on display
    @Override
    public void update(Observable o, Object arg) {
        g = (GameModel) o;
        this.msg.setText(" " + g.getLatestMessage());
        this.revalidate();
    }
}
